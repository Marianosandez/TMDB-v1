{"ast":null,"code":"var _jsxFileName = \"/Users/marianosandez/Desktop/Plataforma5/GITHUB/TMDB/src/context/searchContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  savedSearch: [],\n  saveSearch: () => {},\n  searching: () => {},\n  searchTerm: \"\",\n  searchType: \"\",\n  tmdbKey: \"5f4cf67aa6b81c56e16cff977537cf17\",\n  basicURL: \"https://api.themoviedb.org/3/search/\"\n};\nexport const SearchContext = /*#__PURE__*/createContext(initialState);\n\nconst SearchContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [savedSearch, setSavedSearch] = useState({\n    savedSearch: []\n  });\n  const [searchTerm, setSearchTerm] = useState({\n    searchTerm: \"\"\n  });\n  const [searchType, setSearchType] = useState({\n    searchType: \"\"\n  });\n\n  const saveSearch = searchResult => {\n    setSavedSearch({\n      savedSearch: searchResult\n    });\n  };\n\n  const [activeSearch, setActiveSearch] = useState(false);\n  const tmdbKey = \"5f4cf67aa6b81c56e16cff977537cf17\";\n  const basicURL = \"https://api.themoviedb.org/3/search/\"; //  const searching=(value,previousSearch)=>{\n  //      axios\n  //     .get(`${basicURL}${searchType}?page=${value}&query=${searchTerm}&api_key=${tmdbKey}`)\n  //     .then((res) => res.data)\n  //    .then((result) => {saveSearch(result); setActiveSearch(true)})}\n\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: { ...savedSearch,\n      saveSearch,\n      searchTerm,\n      setSearchTerm,\n      searchType,\n      setSearchType,\n      tmdbKey,\n      activeSearch,\n      setActiveSearch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchContextProvider, \"aPIQ/9EP0mg4rw1q3usQoYP8Qb4=\");\n\n_c = SearchContextProvider;\nexport default SearchContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchContextProvider\");","map":{"version":3,"names":["createContext","useState","axios","initialState","savedSearch","saveSearch","searching","searchTerm","searchType","tmdbKey","basicURL","SearchContext","SearchContextProvider","children","setSavedSearch","setSearchTerm","setSearchType","searchResult","activeSearch","setActiveSearch"],"sources":["/Users/marianosandez/Desktop/Plataforma5/GITHUB/TMDB/src/context/searchContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport axios from \"axios\";\n\nconst initialState = {\n  savedSearch: [],\n  saveSearch: () => {},\n  searching: () => {},\n  searchTerm: \"\",\n  searchType: \"\",\n  tmdbKey: \"5f4cf67aa6b81c56e16cff977537cf17\",\n  basicURL: \"https://api.themoviedb.org/3/search/\",\n};\n\nexport const SearchContext = createContext(initialState);\n\nconst SearchContextProvider = ({ children }) => {\n  const [savedSearch, setSavedSearch] = useState({\n    savedSearch: [],\n  });\n  const [searchTerm, setSearchTerm] = useState({\n    searchTerm: \"\",\n  });\n  const [searchType, setSearchType] = useState({\n    searchType: \"\",\n  });\n  const saveSearch = (searchResult) => {\n    setSavedSearch({ savedSearch: searchResult });\n  };\n\n  const [activeSearch, setActiveSearch] = useState(false);\n\n  const tmdbKey = \"5f4cf67aa6b81c56e16cff977537cf17\";\n  const basicURL = \"https://api.themoviedb.org/3/search/\";\n\n  //  const searching=(value,previousSearch)=>{\n  //      axios\n  //     .get(`${basicURL}${searchType}?page=${value}&query=${searchTerm}&api_key=${tmdbKey}`)\n  //     .then((res) => res.data)\n  //    .then((result) => {saveSearch(result); setActiveSearch(true)})}\n\n  return (\n    <SearchContext.Provider\n      value={{\n        ...savedSearch,\n        saveSearch,\n        searchTerm,\n        setSearchTerm,\n        searchType,\n        setSearchType,\n        tmdbKey,\n        activeSearch,\n        setActiveSearch,\n      }}\n    >\n      {children}\n    </SearchContext.Provider>\n  );\n};\nexport default SearchContextProvider;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EADM;EAEnBC,UAAU,EAAE,MAAM,CAAE,CAFD;EAGnBC,SAAS,EAAE,MAAM,CAAE,CAHA;EAInBC,UAAU,EAAE,EAJO;EAKnBC,UAAU,EAAE,EALO;EAMnBC,OAAO,EAAE,kCANU;EAOnBC,QAAQ,EAAE;AAPS,CAArB;AAUA,OAAO,MAAMC,aAAa,gBAAGX,aAAa,CAACG,YAAD,CAAnC;;AAEP,MAAMS,qBAAqB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC9C,MAAM,CAACT,WAAD,EAAcU,cAAd,IAAgCb,QAAQ,CAAC;IAC7CG,WAAW,EAAE;EADgC,CAAD,CAA9C;EAGA,MAAM,CAACG,UAAD,EAAaQ,aAAb,IAA8Bd,QAAQ,CAAC;IAC3CM,UAAU,EAAE;EAD+B,CAAD,CAA5C;EAGA,MAAM,CAACC,UAAD,EAAaQ,aAAb,IAA8Bf,QAAQ,CAAC;IAC3CO,UAAU,EAAE;EAD+B,CAAD,CAA5C;;EAGA,MAAMH,UAAU,GAAIY,YAAD,IAAkB;IACnCH,cAAc,CAAC;MAAEV,WAAW,EAAEa;IAAf,CAAD,CAAd;EACD,CAFD;;EAIA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;EAEA,MAAMQ,OAAO,GAAG,kCAAhB;EACA,MAAMC,QAAQ,GAAG,sCAAjB,CAjB8C,CAmB9C;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE,EACL,GAAGN,WADE;MAELC,UAFK;MAGLE,UAHK;MAILQ,aAJK;MAKLP,UALK;MAMLQ,aANK;MAOLP,OAPK;MAQLS,YARK;MASLC;IATK,CADT;IAAA,UAaGN;EAbH;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA1CD;;GAAMD,qB;;KAAAA,qB;AA2CN,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}