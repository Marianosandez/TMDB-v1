{"ast":null,"code":"var _jsxFileName = \"/Users/marianosandez/Desktop/Plataforma5/Bootcamp/checkpoint-TMDB-220101/src/context/searchContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  savedSearch: [],\n  saveSearch: () => {},\n  tmdbKey: \"5f4cf67aa6b81c56e16cff977537cf17\",\n  basicURL: \"https://api.themoviedb.org/3/search/\"\n};\nexport const SearchContext = /*#__PURE__*/createContext(initialState);\n\nconst SearchContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [savedSearch, setSavedSearch] = useState({\n    savedSearch: []\n  });\n\n  const saveSearch = searchResult => {\n    setSavedSearch({\n      savedSearch: searchResult\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: { ...savedSearch,\n      saveSearch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 8\n  }, this);\n};\n\n_s(SearchContextProvider, \"+29h7QERK3W9VDwylYfyS22CqfA=\");\n\n_c = SearchContextProvider;\nexport default SearchContextProvider;\nconst tmdbKey = \"5f4cf67aa6b81c56e16cff977537cf17\";\nconst basicURL = \"https://api.themoviedb.org/3/search/\";\nconst [searchTerm, setSearchTerm] = useState(\"\");\nconst {\n  savedSearch,\n  saveSearch\n} = useContext(SearchContext);\nconst [searchType, setSearchType] = useState(\"\");\n\nconst handleSearchTerm = function (e) {\n  return setSearchTerm(e.target.value);\n};\n\nconst handleSearchType = function (value) {\n  return setSearchType(value);\n};\n\nconst handleSubmit = function (e) {\n  e.preventDefault();\n  const encodedSearch = encodeURI(searchTerm);\n  if (searchType === \"\") return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"SELECT TYPE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 31\n  }, this);\n  axios.get(`${basicURL}${searchType}?query=${encodedSearch}&api_key=${tmdbKey}`).then(res => res.data).then(result => saveSearch(result));\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchContextProvider\");","map":{"version":3,"names":["createContext","useState","initialState","savedSearch","saveSearch","tmdbKey","basicURL","SearchContext","SearchContextProvider","children","setSavedSearch","searchResult","searchTerm","setSearchTerm","useContext","searchType","setSearchType","handleSearchTerm","e","target","value","handleSearchType","handleSubmit","preventDefault","encodedSearch","encodeURI","axios","get","then","res","data","result"],"sources":["/Users/marianosandez/Desktop/Plataforma5/Bootcamp/checkpoint-TMDB-220101/src/context/searchContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst initialState={\n    savedSearch:[],\n    saveSearch:()=>{},\n    tmdbKey : \"5f4cf67aa6b81c56e16cff977537cf17\",\n    basicURL : \"https://api.themoviedb.org/3/search/\",\n\n}\n\nexport const SearchContext= createContext(initialState);\n\nconst SearchContextProvider=({children})=>{\n const [savedSearch,setSavedSearch]=useState({\n     savedSearch:[]\n })\n \n const saveSearch=(searchResult)=>{\n     setSavedSearch({savedSearch:searchResult})   \n }\nreturn <SearchContext.Provider value={{...savedSearch, saveSearch}}>{children}</SearchContext.Provider>\n}\n; \nexport default SearchContextProvider\n\nconst tmdbKey = \"5f4cf67aa6b81c56e16cff977537cf17\";\nconst basicURL = \"https://api.themoviedb.org/3/search/\";\nconst [searchTerm, setSearchTerm] = useState(\"\");\nconst {savedSearch, saveSearch}=useContext (SearchContext)\nconst [searchType, setSearchType]=useState(\"\")\n\nconst handleSearchTerm = function (e) {\n  return setSearchTerm(e.target.value);\n};\nconst handleSearchType= function(value){\n  return setSearchType(value)\n}\nconst handleSubmit = function (e) {\n  e.preventDefault();\n  const encodedSearch = encodeURI(searchTerm);\n  if(searchType=== \"\") return <p>SELECT TYPE</p>\n  axios\n    .get(`${basicURL}${searchType}?query=${encodedSearch}&api_key=${tmdbKey}`)\n    .then((res) => res.data)\n   .then((result) => saveSearch(result));\n    \n};"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,YAAY,GAAC;EACfC,WAAW,EAAC,EADG;EAEfC,UAAU,EAAC,MAAI,CAAE,CAFF;EAGfC,OAAO,EAAG,kCAHK;EAIfC,QAAQ,EAAG;AAJI,CAAnB;AAQA,OAAO,MAAMC,aAAa,gBAAEP,aAAa,CAACE,YAAD,CAAlC;;AAEP,MAAMM,qBAAqB,GAAC,QAAc;EAAA;;EAAA,IAAb;IAACC;EAAD,CAAa;EACzC,MAAM,CAACN,WAAD,EAAaO,cAAb,IAA6BT,QAAQ,CAAC;IACxCE,WAAW,EAAC;EAD4B,CAAD,CAA3C;;EAIA,MAAMC,UAAU,GAAEO,YAAD,IAAgB;IAC7BD,cAAc,CAAC;MAACP,WAAW,EAACQ;IAAb,CAAD,CAAd;EACH,CAFD;;EAGD,oBAAO,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE,EAAC,GAAGR,WAAJ;MAAiBC;IAAjB,CAA/B;IAAA,UAA8DK;EAA9D;IAAA;IAAA;IAAA;EAAA,QAAP;AACC,CATD;;GAAMD,qB;;KAAAA,qB;AAWN,eAAeA,qBAAf;AAEA,MAAMH,OAAO,GAAG,kCAAhB;AACA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAM;EAACE,WAAD;EAAcC;AAAd,IAA0BU,UAAU,CAAEP,aAAF,CAA1C;AACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;;AAEA,MAAMgB,gBAAgB,GAAG,UAAUC,CAAV,EAAa;EACpC,OAAOL,aAAa,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB;AACD,CAFD;;AAGA,MAAMC,gBAAgB,GAAE,UAASD,KAAT,EAAe;EACrC,OAAOJ,aAAa,CAACI,KAAD,CAApB;AACD,CAFD;;AAGA,MAAME,YAAY,GAAG,UAAUJ,CAAV,EAAa;EAChCA,CAAC,CAACK,cAAF;EACA,MAAMC,aAAa,GAAGC,SAAS,CAACb,UAAD,CAA/B;EACA,IAAGG,UAAU,KAAI,EAAjB,EAAqB,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACrBW,KAAK,CACFC,GADH,CACQ,GAAErB,QAAS,GAAES,UAAW,UAASS,aAAc,YAAWnB,OAAQ,EAD1E,EAEGuB,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAFrB,EAGEF,IAHF,CAGQG,MAAD,IAAY3B,UAAU,CAAC2B,MAAD,CAH7B;AAKD,CATD"},"metadata":{},"sourceType":"module"}